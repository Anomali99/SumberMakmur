/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import model.model_login;
import view.Login;
import view.admin_barang;
import view.admin_pelanggan;
import view.admin_penjual;
import view.admin_supplayer;
import view.laporan_barang;
import view.laporan_transaksi;
import view.profil_penjual;
import view.transaksi_pesanan;
import view.transaksi_supplay;

/**
 *
 * @author fatiq
 */
public class menuUtama extends javax.swing.JFrame {

    /**
     * Creates new form menu
     */
    private model_login modLog;

    public menuUtama(model_login modLog) {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        lb_username.setText(modLog.getNamaUser());
        lb_level.setText(modLog.getLevel());
        lb_id.setText("ID : " + modLog.getId_user());
        ImageIcon imgIcon = null;
        if (modLog.getGambar() != null) {
            try {
                byte[] img = modLog.getGambar().getBytes(1, (int) modLog.getGambar().length());
                imgIcon = new ImageIcon(img);
            } catch (SQLException ex) {
                Logger.getLogger(menuUtama.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
                imgIcon = new ImageIcon(getClass().getResource("/img/user.png"));
        }

        int lbW = 100;
        int lbH = 100;

        int imgW = imgIcon.getIconWidth();
        int imgH = imgIcon.getIconHeight();

        double scaleX = (double) lbW / (double) imgW;
        double scaleY = (double) lbH / (double) imgH;
        double scale = Math.min(scaleX, scaleY);

        Image scaleImg = imgIcon.getImage().getScaledInstance((int) (scale * imgW), (int) (scale * imgH), Image.SCALE_SMOOTH);

        lb_foto.setIcon(new ImageIcon(scaleImg));

        phi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_navbar = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        pn_menubar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pn_menu = new javax.swing.JPanel();
        lb_foto = new javax.swing.JLabel();
        lb_username = new javax.swing.JLabel();
        lb_level = new javax.swing.JLabel();
        lb_id = new javax.swing.JLabel();
        pn_conten = new javax.swing.JPanel();
        pn_utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/img/logo2.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pn_navbar.setBackground(new java.awt.Color(0, 0, 0));

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo.png"))); // NOI18N

        javax.swing.GroupLayout pn_navbarLayout = new javax.swing.GroupLayout(pn_navbar);
        pn_navbar.setLayout(pn_navbarLayout);
        pn_navbarLayout.setHorizontalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(logo)
                .addContainerGap(616, Short.MAX_VALUE))
        );
        pn_navbarLayout.setVerticalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(logo)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(pn_navbar, java.awt.BorderLayout.PAGE_START);

        pn_menubar.setBackground(new java.awt.Color(255, 255, 255));
        pn_menubar.setPreferredSize(new java.awt.Dimension(250, 200));

        jScrollPane1.setBorder(null);

        pn_menu.setBackground(new java.awt.Color(255, 255, 255));
        pn_menu.setLayout(new javax.swing.BoxLayout(pn_menu, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(pn_menu);

        lb_foto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_foto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/user.png"))); // NOI18N
        lb_foto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_fotoMouseClicked(evt);
            }
        });

        lb_username.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lb_username.setForeground(new java.awt.Color(0, 0, 0));
        lb_username.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_username.setText("username");
        lb_username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_usernameMouseClicked(evt);
            }
        });

        lb_level.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        lb_level.setForeground(new java.awt.Color(0, 0, 0));
        lb_level.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_level.setText("level");
        lb_level.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_levelMouseClicked(evt);
            }
        });

        lb_id.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        lb_id.setForeground(new java.awt.Color(0, 0, 0));
        lb_id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_id.setText("id");
        lb_id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_idMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pn_menubarLayout = new javax.swing.GroupLayout(pn_menubar);
        pn_menubar.setLayout(pn_menubarLayout);
        pn_menubarLayout.setHorizontalGroup(
            pn_menubarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addComponent(lb_username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lb_foto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lb_level, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pn_menubarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pn_menubarLayout.setVerticalGroup(
            pn_menubarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_menubarLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lb_foto, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_id)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_username)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lb_level)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
        );

        getContentPane().add(pn_menubar, java.awt.BorderLayout.LINE_START);

        pn_conten.setBackground(new java.awt.Color(0, 0, 0));

        pn_utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pn_contenLayout = new javax.swing.GroupLayout(pn_conten);
        pn_conten.setLayout(pn_contenLayout);
        pn_contenLayout.setHorizontalGroup(
            pn_contenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_contenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE))
        );
        pn_contenLayout.setVerticalGroup(
            pn_contenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(pn_conten, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(774, 469));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        pn_utama.add(new home());
        pn_utama.repaint();
        pn_utama.revalidate();
    }//GEN-LAST:event_formWindowOpened

    private void lb_fotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_fotoMouseClicked
        profil();
    }//GEN-LAST:event_lb_fotoMouseClicked

    private void lb_usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_usernameMouseClicked
        profil();
    }//GEN-LAST:event_lb_usernameMouseClicked

    private void lb_levelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_levelMouseClicked
        profil();
    }//GEN-LAST:event_lb_levelMouseClicked

    private void lb_idMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_idMouseClicked
        profil();
    }//GEN-LAST:event_lb_idMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menuUtama(new model_login()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_foto;
    private javax.swing.JLabel lb_id;
    private javax.swing.JLabel lb_level;
    private javax.swing.JLabel lb_username;
    private javax.swing.JLabel logo;
    private javax.swing.JPanel pn_conten;
    private javax.swing.JPanel pn_menu;
    private javax.swing.JPanel pn_menubar;
    private javax.swing.JPanel pn_navbar;
    private javax.swing.JPanel pn_utama;
    // End of variables declaration//GEN-END:variables

    private void phi() {
        ImageIcon iHome = new ImageIcon(getClass().getResource("/img/home.png"));
        ImageIcon iMaster = new ImageIcon(getClass().getResource("/img/master.png"));
        ImageIcon iTransaksi = new ImageIcon(getClass().getResource("/img/transaksi.png"));
        ImageIcon iBarang = new ImageIcon(getClass().getResource("/img/barang.png"));
        ImageIcon iCustomer = new ImageIcon(getClass().getResource("/img/customer.png"));
        ImageIcon iDistributor = new ImageIcon(getClass().getResource("/img/distributor.png"));
        ImageIcon iPenjual = new ImageIcon(getClass().getResource("/img/pengguna.png"));
        ImageIcon iPemesanan = new ImageIcon(getClass().getResource("/img/buy.png"));
        ImageIcon iExit = new ImageIcon(getClass().getResource("/img/exit.png"));
        ImageIcon iLaporan = new ImageIcon(getClass().getResource("/img/laporan.png"));

        menuItem mHome = new menuItem(iHome, false, null, "Home", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new home());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuItem sPenjual = new menuItem(null, true, iPenjual, "Penjual", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new admin_penjual());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuItem sPembeli = new menuItem(null, true, iCustomer, "Pelanggan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new admin_pelanggan());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuItem sSupplayer = new menuItem(null, true, iDistributor, "Supplayer", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new admin_supplayer());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuItem sBarang = new menuItem(null, true, iBarang, "Barang", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new admin_barang());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuItem sPesanan = new menuItem(null, true, iPemesanan, "Pesanan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String[] x = lb_id.getText().split(":");
                pn_utama.removeAll();
                pn_utama.add(new transaksi_pesanan(x[1].trim()));
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuItem sSupplay = new menuItem(null, true, iDistributor, "Supplay", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String[] x = lb_id.getText().split(":");
                pn_utama.removeAll();
                pn_utama.add(new transaksi_supplay(x[1].trim()));
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuItem sLBarang = new menuItem(null, true, iBarang, "Barang", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new laporan_barang());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuItem sLTransaksi = new menuItem(null, true, iTransaksi, "Transaksi", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new laporan_transaksi());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });

        menuItem mAdmin = new menuItem(iMaster, false, null, "Admin", null, sPenjual, sPembeli, sSupplayer, sBarang);
        menuItem mTransaksi = new menuItem(iTransaksi, false, null, "Transaksi", null, sPesanan, sSupplay);
        menuItem mLaporan = new menuItem(iLaporan, false, null, "Laporan", null, sLBarang, sLTransaksi);
        menuItem mLaporan1 = new menuItem(iLaporan, false, null, "Laporan Barang", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_utama.removeAll();
                pn_utama.add(new laporan_barang());
                pn_utama.repaint();
                pn_utama.revalidate();
            }
        });
        menuItem mExit = new menuItem(iExit, false, null, "Logout", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                new Login().setVisible(true);
                dispose();
            }
        });

        String lv = lb_level.getText();
        if (lv.equals("Boss")) {
            addMenu(mHome, mAdmin, mTransaksi, mLaporan, mExit);
        } else {
            addMenu(mHome, mTransaksi, mLaporan1, mExit);
        }
    }

    private void addMenu(menuItem... menu) {
        for (int i = 0; i < menu.length; i++) {
            pn_menu.add(menu[i]);
            ArrayList<menuItem> subMenu = menu[i].getSubMenu();
            for (menuItem m : subMenu) {
                addMenu(m);
            }
        }
        pn_menu.revalidate();
    }

    private void profil() {
        String[] x = lb_id.getText().split(":");
        pn_utama.removeAll();
        pn_utama.add(new profil_penjual(x[1].trim()));
        pn_utama.repaint();
        pn_utama.revalidate();
    }
}
